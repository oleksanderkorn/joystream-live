{"version":3,"sources":["joystream.svg","debug.ts","joyApi.ts","utils.ts","get-status.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["moment","defaultFormat","config","JoyApi","endpoint","isReady","api","wsEndpoint","process","PROVIDER","values","console","log","format","this","a","ApiPromise","provider","WsProvider","types","isReadyOrError","then","instance","blockHash","undefined","query","balances","totalIssuance","at","issuance","toNumber","Promise","all","rpc","system","chain","name","version","peers","nodeName","nodeVersion","toString","peerCount","length","getFinalizedHead","finalizedHash","getHeader","number","address","stash","blockStart","getBlockHash","startHash","staking","activeEra","startEra","unwrap","index","Date","timestamp","now","startTimestamp","toISOString","blockEnd","endHash","endEra","endTimestamp","activeEras","blockHeight","blockEra","blockTimestamp","erasRewardPoints","individual","forEach","points","author","indexOf","push","eraPoints","data","pn","Number","toBigInt","id","era","hash","block","date","blocksData","newBlock","account","currentEra","firstHead","currHash","size","currSize","derive","stashes","map","s","String","erasStakers","stakers","isSome","searchPreviousBlocks","getBlock","currentBlockNr","header","currentHash","snapshotValidators","allValidators","isEmpty","validatorCount","max","activeValidators","Array","from","slice","session","validators","erasTotalStake","BN","totalStake","count","toJSON","total_stake","PromiseAllObj","obj","Object","entries","key","val","res","reduce","acc","value","getStatusWs","init","getActiveErasForBlock","status","App","props","state","shouldStop","rows","columns","field","headerName","width","sortable","headerAlign","startBlock","endBlock","isLoading","getStatus","bind","setStash","setBlockStart","setBlockEnd","event","setState","prevState","target","result","className","Container","maxWidth","Grid","container","direction","justify","alignItems","spacing","item","lg","src","joystream","alt","TextField","onChange","fullWidth","label","variant","BootstrapButton","onClick","color","style","height","pageSize","React","withStyles","root","boxShadow","textTransform","fontSize","padding","border","lineHeight","backgroundColor","borderColor","fontFamily","join","Button","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e61991d2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/joystream.f5df567f.svg\";","import moment from 'moment';\n\nmoment.defaultFormat = 'YYYY-MM-DD HH:mm:ss';\n\nexport const log = (...values: any[]) => {\n    console.log(`[${moment().format()}]:`, ...values);\n}\n\nexport const error = (...values: any[]) => {\n    console.error(`[${moment().format()}]:`, ...values);\n}","import { WsProvider, ApiPromise } from \"@polkadot/api\";\nimport { types } from \"@joystream/types\";\nimport { AccountId, Hash, Moment } from \"@polkadot/types/interfaces\";\nimport { config } from \"dotenv\";\nimport BN from \"bn.js\";\nimport { log } from './debug';\nimport {Option, Vec} from \"@polkadot/types\";\n\nconfig();\n\nexport interface ActiveEra {\n  id: number,\n  era: number,\n  hash: string,\n  block: number,\n  date: string,\n  points: number\n}\n\nexport class JoyApi {\n  endpoint: string;\n  isReady: Promise<ApiPromise>;\n  api!: ApiPromise;\n\n  constructor(endpoint?: string) {\n    const wsEndpoint =\n      endpoint || process.env.PROVIDER || \"ws://127.0.0.1:9944\";\n    log(`Endpoint: [${wsEndpoint}]`)\n    this.endpoint = wsEndpoint;\n    this.isReady = (async () => {\n      const api = await new ApiPromise({ provider: new WsProvider(wsEndpoint), types })\n        .isReadyOrError;\n      return api;\n    })();\n  }\n  get init(): Promise<JoyApi> {\n    return this.isReady.then((instance) => {\n      this.api = instance;\n      return this;\n    });\n  }\n\n  async totalIssuance(blockHash?: Hash) {\n    const issuance =\n      blockHash === undefined\n        ? await this.api.query.balances.totalIssuance()\n        : await this.api.query.balances.totalIssuance.at(blockHash);\n\n    return issuance.toNumber();\n  }\n\n  async systemData() {\n    const [chain, nodeName, nodeVersion, peers] = await Promise.all([\n      this.api.rpc.system.chain(),\n      this.api.rpc.system.name(),\n      this.api.rpc.system.version(),\n      this.api.rpc.system.peers(),\n    ]);\n\n    return {\n      chain: chain.toString(),\n      nodeName: nodeName.toString(),\n      nodeVersion: nodeVersion.toString(),\n      peerCount: peers.length,\n    };\n  }\n\n  async finalizedHash() {\n    return this.api.rpc.chain.getFinalizedHead();\n  }\n\n  async finalizedBlockHeight() {\n    const finalizedHash = await this.finalizedHash();\n    const { number } = await this.api.rpc.chain.getHeader(`${finalizedHash}`);\n    return number.toNumber();\n  }\n\n\n  async getActiveEras(address: string) {\n    const stash = address || '5EhDdcWm4TdqKp1ew1PqtSpoAELmjbZZLm5E34aFoVYkXdRW';\n    const blockStart = 1069639;\n    const startHash = (await this.api.rpc.chain.getBlockHash(blockStart));\n    console.log(`Start Hash [${startHash}]`);\n    const startEra = (await this.api.query.staking.activeEra.at(startHash)).unwrap().index.toNumber();\n    console.log(`Start Era [${startEra}]`);\n    const startTimestamp = new Date((await this.api.query.timestamp.now.at(startHash)).toNumber()).toISOString();\n    console.log(`Start Date [${startTimestamp}]`);\n    const blockEnd = 1270177;\n    const endHash = (await this.api.rpc.chain.getBlockHash(blockEnd));\n    console.log(`End Hash [${endHash}]`);\n    const endEra = (await this.api.query.staking.activeEra.at(endHash)).unwrap().index.toNumber();\n    console.log(`End Era [${endEra}]`);\n    const endTimestamp = new Date((await this.api.query.timestamp.now.at(endHash)).toNumber()).toISOString();\n    console.log(`End Date [${endTimestamp}]`);\n\n    let activeEras: number[] = [];\n    for (let blockHeight = blockStart; blockHeight < blockEnd; blockHeight += 1) {\n      const blockHash = (await this.api.rpc.chain.getBlockHash(blockHeight));\n      //console.log(`Block Hash [${startHash}]`);\n      const blockEra = (await this.api.query.staking.activeEra.at(blockHash)).unwrap().index.toNumber();\n      //console.log(`Block Era [${blockEra}]`);\n      const blockTimestamp = new Date((await this.api.query.timestamp.now.at(blockHash)).toNumber()).toISOString();\n      //console.log(`Block Date [${blockTimestamp}]`);  \n      const eraPoints = await this.api.query.staking.erasRewardPoints.at(blockHash, blockEra)\n      //console.log(`Era Points [${eraPoints}]`);\n      // const currPoints = 0;\n      eraPoints.individual.forEach((points,author) => {\n          //console.log(`Author Points [${author}]`);\n          //console.log(`Individual Points [${points}]`);\n          if(author.toString() === stash) {\n            // const pn = Number(points.toBigInt())\n            // const activeEra = {\n            //   era: blockEra,\n            //   block: blockHeight,\n            //   date: blockTimestamp,\n            //   points: pn\n            // }\n            const activeEra = blockEra\n            if (activeEras.indexOf(activeEra) < 0) {\n              activeEras.push(activeEra)\n              console.log(`Era [${blockEra}], Date [${blockTimestamp}]`); //, Points [${pn}]\n            }\n          }\n      });\n    }\n    return {\n      activeEras\n    }\n  }\n\n  async getActiveErasForBlock(address: string, blockStart: number) {\n    const stash = address || '5EhDdcWm4TdqKp1ew1PqtSpoAELmjbZZLm5E34aFoVYkXdRW';\n    const startHash = (await this.api.rpc.chain.getBlockHash(blockStart));\n    const startEra = (await this.api.query.staking.activeEra.at(startHash)).unwrap().index.toNumber();\n    const startTimestamp = new Date((await this.api.query.timestamp.now.at(startHash)).toNumber()).toISOString();\n    const eraPoints = await this.api.query.staking.erasRewardPoints.at(startHash, startEra)\n    let data = undefined\n    eraPoints.individual.forEach((points, author) => {\n      // console.log(`Author Points [${author}]`);\n      // console.log(`Individual Points [${points}]`);\n      if (author.toString() === stash) {\n        const pn = Number(points.toBigInt())\n        const activeEra: ActiveEra = {\n          id: blockStart,\n          era: startEra,\n          hash: startHash.toString(),\n          block: blockStart,\n          date: startTimestamp,\n          points: pn\n        }\n        console.log(`Era [${activeEra.era}], Block [${activeEra.block}], Date [${activeEra.date}], Points [${activeEra.points}], Hash [${activeEra.hash}]`);\n        data = activeEra\n      }\n    });\n    return data\n  }\n\n  async scoringPeriodData() {\n    const blockStart = 1069700;\n    const blockEnd = 1270000;\n\n    const blocksData = []\n\n    let newBlock = blockStart\n    while(true) {\n      const blockHash = (await this.api.rpc.chain.getBlockHash(newBlock)) as Hash;\n      const blockEra = (await this.api.query.staking.activeEra.at(blockHash)).unwrap().index.toNumber();\n      const blockTimestamp = new Date((await this.api.query.timestamp.now.at(blockHash) as unknown as Moment).toNumber()).toISOString();\n      blocksData.push(\n        {\n          newBlock,\n          blockHash,\n          blockEra,\n          blockTimestamp\n        }\n      )\n      if (blockTimestamp.indexOf(\"2021-06-20\") > -1) {\n        break;\n      }\n      newBlock -= 1\n    }\n\n    const startHash = (await this.api.rpc.chain.getBlockHash(blockStart)) as Hash;\n    const startEra = (await this.api.query.staking.activeEra.at(startHash)).unwrap().index.toNumber();\n    const startTimestamp = new Date((await this.api.query.timestamp.now.at(startHash) as unknown as Moment).toNumber()).toISOString();\n\n    const endHash = (await this.api.rpc.chain.getBlockHash(blockEnd)) as Hash;\n    const endTimestamp = new Date((await this.api.query.timestamp.now.at(endHash) as unknown as Moment).toNumber()).toISOString();\n    const endEra = (await this.api.query.staking.activeEra.at(endHash)).unwrap().index.toNumber();\n\n    return {\n      startEra,\n      startHash,\n      startTimestamp,\n      endEra,\n      endHash,\n      endTimestamp,\n      blocksData\n    }\n  }\n\n  async eraData() {\n    const address = '5EhDdcWm4TdqKp1ew1PqtSpoAELmjbZZLm5E34aFoVYkXdRW';\n    const account = await this.api.query.system.account(address);\n    const era = await this.api.query.staking.currentEra();\n    \n    const firstHead = this.api.rpc.chain.getHeader();\n    const currHash = await this.api.query.system.account.hash(address);\n    const currSize = await this.api.query.system.account.size(address);\n    const stashes = (await this.api.derive.staking.stashes()).map((s) => String(s))\n    const stakers = await this.api.query.staking.erasStakers(era.unwrap(), stashes[0]);\n    \n    // let startHash = (await this.api.rpc.chain.getBlockHash(1000000)) as Hash;\n    // const startEra = (await this.api.query.staking.currentEra.at(startHash) as Option<EraIndex>).unwrap().toNumber();\n    // let startTimestamp = new Date((await this.api.query.timestamp.now.at(startHash) as unknown as Moment).toNumber()).toISOString();\n    \n    // let endHash = (await this.api.rpc.chain.getBlockHash(1274434)) as Hash;\n    // let endTimestamp = new Date((await this.api.query.timestamp.now.at(endHash) as unknown as Moment).toNumber()).toISOString();\n    // const endEra = (await this.api.query.staking.currentEra.at(endHash) as Option<EraIndex>).unwrap().toNumber();\n\n    // let startValidators = await this.findActiveValidators(startHash, false);\n    // let endValidators = await this.findActiveValidators(endHash, true);\n\n    return {\n      currentEra: era.isSome ? era.unwrap().toNumber() : {},\n      // startEra,\n      // startHash,\n      // startTimestamp,\n      // endEra,\n      // endHash,\n      // endTimestamp,\n      // startValidators,\n      // endValidators,\n      firstHead,\n      account,\n      currHash,\n      currSize,\n      stashes,\n      stakers\n    }\n  }\n\n  async findActiveValidators(hash: Hash, searchPreviousBlocks: boolean): Promise<AccountId[]> {\n    const block = await this.api.rpc.chain.getBlock(hash);\n\n    let currentBlockNr = block.block.header.number.toNumber();\n    let activeValidators;\n    do {\n        let currentHash = (await this.api.rpc.chain.getBlockHash(currentBlockNr)) as Hash;\n        let allValidators = await this.api.query.staking.snapshotValidators.at(currentHash) as Option<Vec<AccountId>>;\n        if (!allValidators.isEmpty) {\n            let max = (await this.api.query.staking.validatorCount.at(currentHash)).toNumber();\n            activeValidators = Array.from(allValidators.unwrap()).slice(0, max);\n        }\n\n        if (searchPreviousBlocks) {\n            --currentBlockNr;\n        } else {\n            ++currentBlockNr;\n        }\n\n    } while (activeValidators === undefined);\n    return activeValidators;\n}\n\n  async validatorsData() {\n    const validators = await this.api.query.session.validators();\n    const era = await this.api.query.staking.currentEra();\n    const totalStake = era.isSome ?\n      await this.api.query.staking.erasTotalStake(era.unwrap())\n      : new BN(0);\n\n    return {\n      count: validators.length,\n      validators: validators.toJSON(),\n      total_stake: totalStake.toNumber(),\n    };\n  }\n}\n","const fromEntries = (xs: [string | number | symbol, any][]) =>\n  xs.reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n\nexport function PromiseAllObj(obj: {\n  [k: string]: any;\n}): Promise<{ [k: string]: any }> {\n  return Promise.all(\n    Object.entries(obj).map(([key, val]) =>\n      val instanceof Promise\n        ? val.then((res) => [key, res])\n        : new Promise((res) => res([key, val]))\n    )\n  ).then((res: any[]) => fromEntries(res));\n}\n","import { JoyApi } from \"./joyApi\";\nimport { PromiseAllObj } from \"./utils\";\n\nconst api = new JoyApi('wss://rome-rpc-endpoint.joystream.org:9944/');\n\nexport async function getStatus(address: string) {\n  await api.init;\n\n  const status = await PromiseAllObj({\n    activeEras: await api.getActiveEras(address),\n    // totalIssuance: await api.totalIssuance(),\n    // currentEra: await api.eraData(),\n    // system: await api.systemData(),\n    // finalizedBlockHeight: await api.finalizedBlockHeight(),\n    // validators: await api.validatorsData(),\n    // memberships: await api.membershipData(),\n  });\n\n  return status;\n}\n\nexport async function getStatusWs(address: string, blockStart: number) {\n  await api.init;\n  const status = await PromiseAllObj({\n    status: await api.getActiveErasForBlock(address, blockStart)\n  })\n  console.log(status);\n  return status\n}\n","import * as React from 'react';\nimport joystream from './joystream.svg';\nimport './App.css';\nimport { getStatusWs } from './get-status';\nimport { Button, Container, Grid, TextField, withStyles } from '@material-ui/core';\nimport { DataGrid, ColDef } from '@material-ui/data-grid';\nimport { ActiveEra } from './joyApi';\n\ninterface IProps {\n}\n\ninterface IState {\n  shouldStop: boolean,\n  rows: ActiveEra[],\n  columns: ColDef[],\n  stash: string,\n  startBlock: number,\n  endBlock: number,\n  isLoading: boolean,\n}\n\nclass App extends React.Component<IProps, IState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      shouldStop: false,\n      rows: [],\n      columns: [\n        { field: 'era', headerName: 'Era', width: 100, sortable: true, headerAlign: 'center' },\n        { field: 'block', headerName: 'Block', width: 100, sortable: true, headerAlign: 'center' },\n        { field: 'date', headerName: 'Date', width: 200, sortable: true, headerAlign: 'center' },\n        { field: 'points', headerName: 'Points', width: 100, sortable: true, headerAlign: 'center' },\n        { field: 'hash', headerName: 'Block Hash', width: 500, sortable: false, headerAlign: 'center' },\n      ],\n      stash: '5EhDdcWm4TdqKp1ew1PqtSpoAELmjbZZLm5E34aFoVYkXdRW',\n      startBlock: 1069639,\n      endBlock: 1270177,\n      isLoading: false,\n    };\n    this.getStatus = this.getStatus.bind(this);\n    this.setStash = this.setStash.bind(this);\n    this.setBlockStart = this.setBlockStart.bind(this);\n    this.setBlockEnd = this.setBlockEnd.bind(this);\n  }\n\n  setStash(event: React.ChangeEvent<HTMLInputElement>) {\n    console.log(event)\n    this.setState((prevState) => {\n      return { ...prevState, stash: event.target.value }\n    });\n  }\n\n  setBlockStart(event: React.ChangeEvent<HTMLInputElement>) {\n    console.log(event)\n    this.setState((prevState) => {\n      return { ...prevState, startBlock: (event.target.value as unknown as number)}\n    });\n  }\n\n  setBlockEnd(event: React.ChangeEvent<HTMLInputElement>) {\n    console.log(event)\n    this.setState((prevState) => {\n      return { ...prevState, endBlock: (event.target.value as unknown as number) }\n    });\n  }\n\n  async getStatus() {\n    const stash = this.state.stash;\n    const startBlock = this.state.startBlock;\n    const endBlock = this.state.endBlock;\n    const isLoading = this.state.isLoading\n    if (isLoading) {\n      this.setState((prevState) => {\n        return { ...prevState, shouldStop: true, isLoading: false }\n      });\n      return\n    }\n    this.setState((prevState) => {return { ...prevState, isLoading: true, rows: [] }});\n\n    if (startBlock < endBlock) {\n      for (let blockHeight = startBlock; blockHeight <= endBlock; blockHeight += 1) {\n        if (this.state.shouldStop) {\n          this.setState((prevState) => {\n            return { ...prevState, shouldStop: false }\n          });\n          break;\n        }\n        let result = await getStatusWs(stash, blockHeight);\n        if (result && this.state.rows.indexOf(result.status) < 0) {\n          this.setState((prevState) => {\n            return { ...prevState, rows: [...this.state.rows, result.status] }\n          });\n        }\n      }\n    } else {\n      for (let blockHeight = startBlock; blockHeight >= endBlock; blockHeight -= 1) {\n        if (this.state.shouldStop) {\n          this.setState((prevState) => {\n            return { ...prevState, shouldStop: false }\n          });\n          break;\n        }\n        let result = await getStatusWs(stash, blockHeight);\n        if (result && this.state.rows.indexOf(result.status) < 0) {\n          this.setState((prevState) => {\n            return { ...prevState, rows: [...this.state.rows, result.status] }\n          });\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <Container maxWidth=\"lg\">\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={3}\n          >\n            <Grid container item lg={12}></Grid>\n            <img src={joystream} className=\"App-logo\" alt=\"Joystream logo\" />\n            <Grid container item lg={12}>\n              <TextField onChange={this.setStash} fullWidth id=\"stash\" label=\"Stash\" value={this.state.stash} variant=\"filled\" />\n            </Grid>\n            <Grid container item lg={12}>\n              <TextField onChange={this.setBlockStart} fullWidth id=\"block-start\" label=\"Start Block\" value={this.state.startBlock} variant=\"filled\" />\n            </Grid>\n            <Grid container item lg={12}>\n              <TextField onChange={this.setBlockEnd} fullWidth id=\"block-end\" label=\"End Block\" value={this.state.endBlock} variant=\"filled\" />\n            </Grid>\n            <Grid container item lg={12}>\n              <BootstrapButton fullWidth onClick={this.getStatus} color=\"primary\">{this.state.isLoading ? 'Stop' : 'Get Status'}</BootstrapButton>\n            </Grid>\n            <div style={{ height: 600, width: '98%' }}>\n              <DataGrid rows={this.state.rows} columns={this.state.columns} pageSize={50} />\n            </div>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nconst BootstrapButton = withStyles({\n  root: {\n    boxShadow: 'none',\n    textTransform: 'none',\n    fontSize: 16,\n    padding: '6px 12px',\n    border: '1px solid',\n    lineHeight: 1.5,\n    color: '#ffffff',\n    backgroundColor: '#0063cc',\n    borderColor: '#0063cc',\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:hover': {\n      backgroundColor: '#0069d9',\n      borderColor: '#0062cc',\n      boxShadow: 'none',\n    },\n    '&:active': {\n      boxShadow: 'none',\n      backgroundColor: '#0062cc',\n      borderColor: '#005cbf',\n    },\n    '&:focus': {\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n    },\n  },\n})(Button);","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}