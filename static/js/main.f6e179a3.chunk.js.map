{"version":3,"sources":["joystream.svg","debug.ts","joyApi.ts","utils.ts","get-status.ts","BootstrapButton.tsx","LinearProgressWithLabel.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["moment","defaultFormat","config","JoyApi","endpoint","isReady","api","wsEndpoint","process","PROVIDER","this","a","ApiPromise","provider","WsProvider","types","isReadyOrError","then","instance","blockHash","undefined","query","balances","totalIssuance","at","issuance","toNumber","Promise","all","rpc","system","chain","name","version","peers","nodeName","nodeVersion","toString","peerCount","length","getFinalizedHead","finalizedHash","getHeader","number","address","stash","blockStart","getBlockHash","startHash","staking","activeEra","startEra","unwrap","index","Date","timestamp","now","startTimestamp","toISOString","blockEnd","endHash","endEra","endTimestamp","activeEras","blockHeight","blockEra","blockTimestamp","erasRewardPoints","eraPoints","individual","forEach","points","author","indexOf","push","data","pn","Number","toBigInt","id","era","hash","block","date","searchPreviousBlocks","getBlock","currentBlockNr","header","currentHash","snapshotValidators","allValidators","isEmpty","validatorCount","max","activeValidators","Array","from","slice","session","validators","currentEra","isSome","erasTotalStake","BN","totalStake","count","toJSON","total_stake","PromiseAllObj","obj","Object","entries","map","key","val","res","reduce","acc","value","getChainState","init","finalizedBlockHeight","status","getValidatorStatistics","getActiveErasForBlock","BootstrapButton","withStyles","root","boxShadow","textTransform","fontSize","padding","border","lineHeight","color","backgroundColor","borderColor","fontFamily","join","Button","normalise","min","App","props","state","shouldStop","columns","field","headerName","width","sortable","headerAlign","startBlock","endBlock","isLoading","lastBlock","currentBlock","progress","fetchBlocksData","bind","setStash","setBlockStart","setBlockEnd","timerId","setInterval","updateLastBlock","setState","prevState","clearInterval","chainState","event","target","resetDataBeforeLoading","resetProgress","fetchBlockData","updateProgress","result","appendActiveEra","stopLoadingOnLastBlock","className","Container","maxWidth","Grid","container","direction","justify","alignItems","spacing","item","lg","src","joystream","alt","TextField","onChange","fullWidth","label","variant","onClick","style","Box","display","mr","LinearProgress","minWidth","whiteSpace","Typography","Math","round","height","rows","pageSize","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6e179a3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/joystream.f5df567f.svg\";","import moment from 'moment';\n\nmoment.defaultFormat = 'YYYY-MM-DD HH:mm:ss';\n\nexport const log = (...values: any[]) => {\n    //console.log(`[${moment().format()}]:`, ...values);\n}\n\nexport const error = (...values: any[]) => {\n    // console.error(`[${moment().format()}]:`, ...values);\n}","import { WsProvider, ApiPromise } from \"@polkadot/api\";\nimport { types } from \"@joystream/types\";\nimport { AccountId, Hash } from \"@polkadot/types/interfaces\";\nimport { config } from \"dotenv\";\nimport BN from \"bn.js\";\nimport { Option, Vec } from \"@polkadot/types\";\nimport { log } from \"./debug\"\n\nconfig();\n\nexport interface ActiveEra {\n  id: number,\n  era: number,\n  hash: string,\n  block: number,\n  date: string,\n  points: number\n}\n\nexport class JoyApi {\n  endpoint: string;\n  isReady: Promise<ApiPromise>;\n  api!: ApiPromise;\n\n  constructor(endpoint?: string) {\n    const wsEndpoint = endpoint || process.env.PROVIDER || \"ws://127.0.0.1:9944\";\n    this.endpoint = wsEndpoint;\n    this.isReady = (async () => {\n      const api = await new ApiPromise({ provider: new WsProvider(wsEndpoint), types })\n        .isReadyOrError;\n      return api;\n    })();\n  }\n  get init(): Promise<JoyApi> {\n    return this.isReady.then((instance) => {\n      this.api = instance;\n      return this;\n    });\n  }\n\n  async totalIssuance(blockHash?: Hash) {\n    const issuance =\n      blockHash === undefined\n        ? await this.api.query.balances.totalIssuance()\n        : await this.api.query.balances.totalIssuance.at(blockHash);\n\n    return issuance.toNumber();\n  }\n\n  async systemData() {\n    const [chain, nodeName, nodeVersion, peers] = await Promise.all([\n      this.api.rpc.system.chain(),\n      this.api.rpc.system.name(),\n      this.api.rpc.system.version(),\n      this.api.rpc.system.peers(),\n    ]);\n\n    return {\n      chain: chain.toString(),\n      nodeName: nodeName.toString(),\n      nodeVersion: nodeVersion.toString(),\n      peerCount: peers.length,\n    };\n  }\n\n  async finalizedHash() {\n    return this.api.rpc.chain.getFinalizedHead();\n  }\n\n  async finalizedBlockHeight() {\n    const finalizedHash = await this.finalizedHash();\n    const { number } = await this.api.rpc.chain.getHeader(`${finalizedHash}`);\n    return number.toNumber();\n  }\n\n\n  async getActiveEras(address: string) {\n    const stash = address || '5EhDdcWm4TdqKp1ew1PqtSpoAELmjbZZLm5E34aFoVYkXdRW';\n    const blockStart = 1069639;\n    const startHash = (await this.api.rpc.chain.getBlockHash(blockStart));\n    log(`Start Hash [${startHash}]`);\n    const startEra = (await this.api.query.staking.activeEra.at(startHash)).unwrap().index.toNumber();\n    log(`Start Era [${startEra}]`);\n    const startTimestamp = new Date((await this.api.query.timestamp.now.at(startHash)).toNumber()).toISOString();\n    log(`Start Date [${startTimestamp}]`);\n    const blockEnd = 1270177;\n    const endHash = (await this.api.rpc.chain.getBlockHash(blockEnd));\n    log(`End Hash [${endHash}]`);\n    const endEra = (await this.api.query.staking.activeEra.at(endHash)).unwrap().index.toNumber();\n    log(`End Era [${endEra}]`);\n    const endTimestamp = new Date((await this.api.query.timestamp.now.at(endHash)).toNumber()).toISOString();\n    log(`End Date [${endTimestamp}]`);\n\n    let activeEras: number[] = [];\n    for (let blockHeight = blockStart; blockHeight < blockEnd; blockHeight += 1) {\n      const blockHash = (await this.api.rpc.chain.getBlockHash(blockHeight));\n      log(`Block Hash [${startHash}]`);\n      const blockEra = (await this.api.query.staking.activeEra.at(blockHash)).unwrap().index.toNumber();\n      log(`Block Era [${blockEra}]`);\n      const blockTimestamp = new Date((await this.api.query.timestamp.now.at(blockHash)).toNumber()).toISOString();\n      log(`Block Date [${blockTimestamp}]`);  \n      const eraPoints = await this.api.query.staking.erasRewardPoints.at(blockHash, blockEra)\n      log(`Era Points [${eraPoints}]`);\n      eraPoints.individual.forEach((points, author) => {\n        log(`Author Points [${author}]`);\n        log(`Individual Points [${points}]`);\n        if (author.toString() === stash) {\n          // const pn = Number(points.toBigInt())\n          // const activeEra = {\n          //   era: blockEra,\n          //   block: blockHeight,\n          //   date: blockTimestamp,\n          //   points: pn\n          // }\n          const activeEra = blockEra\n          if (activeEras.indexOf(activeEra) < 0) {\n            activeEras.push(activeEra)\n            log(`Era [${blockEra}], Date [${blockTimestamp}]`); //, Points [${pn}]\n          }\n        }\n      });\n    }\n    return {\n      activeEras\n    }\n  }\n\n  async getActiveErasForBlock(address: string, blockStart: number) {\n    const stash = address || '5EhDdcWm4TdqKp1ew1PqtSpoAELmjbZZLm5E34aFoVYkXdRW';\n    const startHash = (await this.api.rpc.chain.getBlockHash(blockStart));\n    const startEra = (await this.api.query.staking.activeEra.at(startHash)).unwrap().index.toNumber();\n    const startTimestamp = new Date((await this.api.query.timestamp.now.at(startHash)).toNumber()).toISOString();\n    const eraPoints = await this.api.query.staking.erasRewardPoints.at(startHash, startEra)\n    let data = undefined\n    eraPoints.individual.forEach((points, author) => {\n      log(`Author Points [${author}]`);\n      log(`Individual Points [${points}]`);\n      if (author.toString() === stash) {\n        const pn = Number(points.toBigInt())\n        const activeEra: ActiveEra = {\n          id: blockStart,\n          era: startEra,\n          hash: startHash.toString(),\n          block: blockStart,\n          date: startTimestamp,\n          points: pn\n        }\n        log(`Era [${activeEra.era}], Block [${activeEra.block}], Date [${activeEra.date}], Points [${activeEra.points}], Hash [${activeEra.hash}]`);\n        data = activeEra\n      }\n    });\n    return data\n  }\n\n  async findActiveValidators(hash: Hash, searchPreviousBlocks: boolean): Promise<AccountId[]> {\n    const block = await this.api.rpc.chain.getBlock(hash);\n\n    let currentBlockNr = block.block.header.number.toNumber();\n    let activeValidators;\n    do {\n      let currentHash = (await this.api.rpc.chain.getBlockHash(currentBlockNr)) as Hash;\n      let allValidators = await this.api.query.staking.snapshotValidators.at(currentHash) as Option<Vec<AccountId>>;\n      if (!allValidators.isEmpty) {\n        let max = (await this.api.query.staking.validatorCount.at(currentHash)).toNumber();\n        activeValidators = Array.from(allValidators.unwrap()).slice(0, max);\n      }\n\n      if (searchPreviousBlocks) {\n        --currentBlockNr;\n      } else {\n        ++currentBlockNr;\n      }\n\n    } while (activeValidators === undefined);\n    return activeValidators;\n  }\n\n  async validatorsData() {\n    const validators = await this.api.query.session.validators();\n    const era = await this.api.query.staking.currentEra();\n    const totalStake = era.isSome ?\n      await this.api.query.staking.erasTotalStake(era.unwrap())\n      : new BN(0);\n\n    return {\n      count: validators.length,\n      validators: validators.toJSON(),\n      total_stake: totalStake.toNumber(),\n    };\n  }\n}\n","const fromEntries = (xs: [string | number | symbol, any][]) =>\n  xs.reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n\nexport function PromiseAllObj(obj: {\n  [k: string]: any;\n}): Promise<{ [k: string]: any }> {\n  return Promise.all(\n    Object.entries(obj).map(([key, val]) =>\n      val instanceof Promise\n        ? val.then((res) => [key, res])\n        : new Promise((res) => res([key, val]))\n    )\n  ).then((res: any[]) => fromEntries(res));\n}\n","import { JoyApi } from \"./joyApi\";\nimport { PromiseAllObj } from \"./utils\";\n\nconst api = new JoyApi('wss://rome-rpc-endpoint.joystream.org:9944/');\n\nexport async function getChainState() {\n  await api.init;\n\n  const status = await PromiseAllObj({\n    // totalIssuance: await api.totalIssuance(),\n    // system: await api.systemData(),\n    finalizedBlockHeight: await api.finalizedBlockHeight(),\n    // validators: await api.validatorsData()\n  });\n\n  return status;\n}\n\nexport async function getValidatorStatistics(address: string, blockStart: number) {\n  await api.init;\n  const status = await PromiseAllObj({\n    status: await api.getActiveErasForBlock(address, blockStart)\n  })\n  return status\n}\n","import { Button, withStyles } from '@material-ui/core';\n\nexport const BootstrapButton = withStyles({\n  root: {\n    boxShadow: 'none',\n    textTransform: 'none',\n    fontSize: 16,\n    padding: '6px 12px',\n    border: '1px solid',\n    lineHeight: 1.5,\n    color: '#ffffff',\n    backgroundColor: '#4138ff',\n    borderColor: '#4138ff',\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:hover': {\n      backgroundColor: '#4138dd',\n      borderColor: '#4138dd',\n      boxShadow: 'none',\n    },\n    '&:active': {\n      boxShadow: 'none',\n      backgroundColor: '#4138ee',\n      borderColor: '#4138ee',\n    },\n    '&:focus': {\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n    },\n  },\n})(Button);\n","import { Box, Grid, LinearProgress, LinearProgressProps, Typography } from '@material-ui/core';\n\nexport function normalise(value: number, min: number, max: number) {\n  return (value - min) * 100 / (max - min);\n}\n\nexport function LinearProgressWithLabel(props: LinearProgressProps & { value: number; min: number; max: number; }) {\n  return props.value > 0 ? (\n    <Grid container item lg={12}>\n      <div style={{ width: '98%' }}>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Box width=\"100%\" mr={1}>\n            <LinearProgress variant=\"determinate\" value={normalise(props.value, props.min, props.max)} />\n          </Box>\n          <Box minWidth={35} style={{ whiteSpace: \"nowrap\" }}>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {`${Math.round(normalise(props.value, props.min, props.max))}% (${props.value}/${props.max})`}\n            </Typography>\n          </Box>\n        </Box>\n      </div>\n    </Grid>\n  ) : null;\n}\n","import * as React from 'react';\nimport joystream from './joystream.svg';\nimport './App.css';\nimport { getValidatorStatistics, getChainState } from './get-status';\nimport { Container, Grid, TextField } from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { BootstrapButton } from './BootstrapButton';\nimport { LinearProgressWithLabel } from './LinearProgressWithLabel';\nimport { IState, IProps } from './Types';\n\nclass App extends React.Component<IProps, IState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      shouldStop: false,\n      activeEras: [],\n      columns: [\n        { field: 'era', headerName: 'Era', width: 100, sortable: true, headerAlign: 'center' },\n        { field: 'block', headerName: 'Block', width: 100, sortable: true, headerAlign: 'center' },\n        { field: 'date', headerName: 'Date', width: 200, sortable: true, headerAlign: 'center' },\n        { field: 'points', headerName: 'Points', width: 100, sortable: true, headerAlign: 'center' },\n        { field: 'hash', headerName: 'Block Hash', width: 500, sortable: false, headerAlign: 'center' },\n      ],\n      stash: '5EhDdcWm4TdqKp1ew1PqtSpoAELmjbZZLm5E34aFoVYkXdRW',\n      startBlock: 1069639,\n      endBlock: 1270177,\n      isLoading: false,\n      lastBlock: 0,\n      currentBlock: 0,\n      progress: {\n        value: 0,\n        min: 0,\n        max: 0\n      }\n    };\n    this.fetchBlocksData = this.fetchBlocksData.bind(this);\n    this.setStash = this.setStash.bind(this);\n    this.setBlockStart = this.setBlockStart.bind(this);\n    this.setBlockEnd = this.setBlockEnd.bind(this);\n  }\n\n  async componentDidMount() {\n    const timerId = setInterval(\n      () => this.updateLastBlock(),\n      7000\n    );\n    this.setState((prevState) => { return { ...prevState, timerId } })\n  }\n\n  componentWillUnmount() {\n    if (this.state.timerId) {\n      clearInterval(this.state.timerId);\n    }\n  }\n\n  async updateLastBlock() {\n    const chainState = await getChainState();\n    this.setState((prevState) => {\n      return { ...prevState, lastBlock: chainState.finalizedBlockHeight }\n    });\n  }\n\n  setStash(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState((prevState) => {\n      return { ...prevState, stash: event.target.value }\n    });\n  }\n\n  setBlockStart(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState((prevState) => {\n      return { ...prevState, startBlock: (event.target.value as unknown as number) }\n    });\n  }\n\n  setBlockEnd(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState((prevState) => {\n      return { ...prevState, endBlock: (event.target.value as unknown as number) }\n    });\n  }\n\n  async fetchBlocksData() {\n    const startBlock = this.state.startBlock;\n    const endBlock = this.state.endBlock;\n    if (this.state.isLoading) {\n      this.setState((prevState) => {\n        return { ...prevState, shouldStop: true, isLoading: false }\n      });\n      return;\n    }\n    this.resetDataBeforeLoading();\n    if (startBlock < endBlock) {\n      for (let blockHeight = startBlock; blockHeight <= endBlock; blockHeight += 1) {\n        if (this.state.shouldStop) {\n          this.resetProgress();\n          return;\n        }\n        await this.fetchBlockData(blockHeight, startBlock, endBlock);\n      }\n    } else {\n      for (let blockHeight = startBlock; blockHeight >= endBlock; blockHeight -= 1) {\n        if (this.state.shouldStop) {\n          this.resetProgress();\n          return;\n        }\n        await this.fetchBlockData(blockHeight, startBlock, endBlock);\n      }\n    }\n  }\n\n  async fetchBlockData(blockHeight: number, startBlock: number, endBlock: number) {\n    this.updateProgress(blockHeight, startBlock, endBlock);\n    let result = await getValidatorStatistics(this.state.stash, blockHeight);\n    this.appendActiveEra(result);\n    this.stopLoadingOnLastBlock(blockHeight, endBlock);\n  }\n\n  private resetProgress() {\n    this.setState((prevState) => {\n      return { ...prevState, shouldStop: false, progress: { value: 0, min: 0, max: 0 } };\n    });\n  }\n\n  private stopLoadingOnLastBlock(blockHeight: number, endBlock: number) {\n    if (blockHeight.toString() === endBlock.toString()) {\n      this.setState((prevState) => {\n        return { ...prevState, isLoading: false };\n      });\n    }\n  }\n\n  private appendActiveEra(result: { [k: string]: any; }) {\n    if (result && result.status && this.state.activeEras.indexOf(result.status) < 0) {\n      this.setState((prevState) => {\n        return { ...prevState, activeEras: [...this.state.activeEras, result.status] };\n      });\n    }\n  }\n\n  private updateProgress(blockHeight: number, startBlock: number, endBlock: number) {\n    this.setState((prevState) => {\n      return { ...prevState, progress: { value: blockHeight, min: startBlock, max: endBlock } };\n    });\n  }\n\n  private resetDataBeforeLoading() {\n    this.setState((prevState) => { return { ...prevState, isLoading: true, activeEras: [] }; });\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <Container maxWidth=\"lg\">\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={3}\n          >\n            <Grid container item lg={12}></Grid>\n            <img src={joystream} className=\"App-logo\" alt=\"Joystream logo\" />\n            <Grid container item lg={12}>\n              <TextField onChange={this.setStash} fullWidth id=\"stash\" label=\"Stash\" value={this.state.stash} variant=\"filled\" />\n            </Grid>\n            <Grid container item lg={12}>\n              <TextField onChange={this.setBlockStart} fullWidth id=\"block-start\" label=\"Start Block\" value={this.state.startBlock} variant=\"filled\" />\n            </Grid>\n            <Grid container item lg={12}>\n              <TextField onChange={this.setBlockEnd} fullWidth id=\"block-end\" label={this.state.lastBlock > 0 ? `End Block (Last block: ${this.state.lastBlock})` : 'End Block'} value={this.state.endBlock} variant=\"filled\" />\n            </Grid>\n            <Grid container item lg={12}>\n              <BootstrapButton fullWidth onClick={this.fetchBlocksData} color=\"primary\">{this.state.isLoading ? 'Stop loading' : 'Load data'}</BootstrapButton>\n            </Grid>\n            {LinearProgressWithLabel(this.state.progress)}\n            <div style={{ height: 600, width: '98%' }}>\n              <DataGrid rows={this.state.activeEras} columns={this.state.columns} pageSize={50} />\n            </div>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}