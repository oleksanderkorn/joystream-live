{"version":3,"sources":["joystream.svg","joyApi.ts","utils.ts","get-status.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["config","JoyApi","endpoint","isReady","api","wsEndpoint","process","PROVIDER","this","a","ApiPromise","provider","WsProvider","types","isReadyOrError","then","instance","blockHash","undefined","query","balances","totalIssuance","at","issuance","toNumber","Promise","all","rpc","system","chain","name","version","peers","nodeName","nodeVersion","toString","peerCount","length","getFinalizedHead","finalizedHash","getHeader","number","address","stash","blockStart","getBlockHash","startHash","console","log","staking","activeEra","startEra","unwrap","index","Date","timestamp","now","startTimestamp","toISOString","blockEnd","endHash","endEra","endTimestamp","activeEras","blockHeight","blockEra","blockTimestamp","erasRewardPoints","individual","forEach","points","author","indexOf","push","eraPoints","data","pn","Number","toBigInt","id","era","hash","block","date","searchPreviousBlocks","getBlock","currentBlockNr","header","currentHash","snapshotValidators","allValidators","isEmpty","validatorCount","max","activeValidators","Array","from","slice","session","validators","currentEra","isSome","erasTotalStake","BN","totalStake","count","toJSON","total_stake","PromiseAllObj","obj","Object","entries","map","key","val","res","reduce","acc","value","getValidatorStatistics","init","getActiveErasForBlock","status","App","props","state","shouldStop","rows","columns","field","headerName","width","sortable","headerAlign","startBlock","endBlock","isLoading","getStatus","bind","setStash","setBlockStart","setBlockEnd","event","setState","prevState","target","result","className","Container","maxWidth","Grid","container","direction","justify","alignItems","spacing","item","lg","src","joystream","alt","TextField","onChange","fullWidth","label","variant","BootstrapButton","onClick","color","style","height","pageSize","React","withStyles","root","boxShadow","textTransform","fontSize","padding","border","lineHeight","backgroundColor","borderColor","fontFamily","join","Button","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4dea457.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/joystream.f5df567f.svg\";","import { WsProvider, ApiPromise } from \"@polkadot/api\";\nimport { types } from \"@joystream/types\";\nimport { AccountId, Hash } from \"@polkadot/types/interfaces\";\nimport { config } from \"dotenv\";\nimport BN from \"bn.js\";\nimport {Option, Vec} from \"@polkadot/types\";\n\nconfig();\n\nexport interface ActiveEra {\n  id: number,\n  era: number,\n  hash: string,\n  block: number,\n  date: string,\n  points: number\n}\n\nexport class JoyApi {\n  endpoint: string;\n  isReady: Promise<ApiPromise>;\n  api!: ApiPromise;\n\n  constructor(endpoint?: string) {\n    const wsEndpoint = endpoint || process.env.PROVIDER || \"ws://127.0.0.1:9944\";\n    this.endpoint = wsEndpoint;\n    this.isReady = (async () => {\n      const api = await new ApiPromise({ provider: new WsProvider(wsEndpoint), types })\n        .isReadyOrError;\n      return api;\n    })();\n  }\n  get init(): Promise<JoyApi> {\n    return this.isReady.then((instance) => {\n      this.api = instance;\n      return this;\n    });\n  }\n\n  async totalIssuance(blockHash?: Hash) {\n    const issuance =\n      blockHash === undefined\n        ? await this.api.query.balances.totalIssuance()\n        : await this.api.query.balances.totalIssuance.at(blockHash);\n\n    return issuance.toNumber();\n  }\n\n  async systemData() {\n    const [chain, nodeName, nodeVersion, peers] = await Promise.all([\n      this.api.rpc.system.chain(),\n      this.api.rpc.system.name(),\n      this.api.rpc.system.version(),\n      this.api.rpc.system.peers(),\n    ]);\n\n    return {\n      chain: chain.toString(),\n      nodeName: nodeName.toString(),\n      nodeVersion: nodeVersion.toString(),\n      peerCount: peers.length,\n    };\n  }\n\n  async finalizedHash() {\n    return this.api.rpc.chain.getFinalizedHead();\n  }\n\n  async finalizedBlockHeight() {\n    const finalizedHash = await this.finalizedHash();\n    const { number } = await this.api.rpc.chain.getHeader(`${finalizedHash}`);\n    return number.toNumber();\n  }\n\n\n  async getActiveEras(address: string) {\n    const stash = address || '5EhDdcWm4TdqKp1ew1PqtSpoAELmjbZZLm5E34aFoVYkXdRW';\n    const blockStart = 1069639;\n    const startHash = (await this.api.rpc.chain.getBlockHash(blockStart));\n    console.log(`Start Hash [${startHash}]`);\n    const startEra = (await this.api.query.staking.activeEra.at(startHash)).unwrap().index.toNumber();\n    console.log(`Start Era [${startEra}]`);\n    const startTimestamp = new Date((await this.api.query.timestamp.now.at(startHash)).toNumber()).toISOString();\n    console.log(`Start Date [${startTimestamp}]`);\n    const blockEnd = 1270177;\n    const endHash = (await this.api.rpc.chain.getBlockHash(blockEnd));\n    console.log(`End Hash [${endHash}]`);\n    const endEra = (await this.api.query.staking.activeEra.at(endHash)).unwrap().index.toNumber();\n    console.log(`End Era [${endEra}]`);\n    const endTimestamp = new Date((await this.api.query.timestamp.now.at(endHash)).toNumber()).toISOString();\n    console.log(`End Date [${endTimestamp}]`);\n\n    let activeEras: number[] = [];\n    for (let blockHeight = blockStart; blockHeight < blockEnd; blockHeight += 1) {\n      const blockHash = (await this.api.rpc.chain.getBlockHash(blockHeight));\n      //console.log(`Block Hash [${startHash}]`);\n      const blockEra = (await this.api.query.staking.activeEra.at(blockHash)).unwrap().index.toNumber();\n      //console.log(`Block Era [${blockEra}]`);\n      const blockTimestamp = new Date((await this.api.query.timestamp.now.at(blockHash)).toNumber()).toISOString();\n      //console.log(`Block Date [${blockTimestamp}]`);  \n      const eraPoints = await this.api.query.staking.erasRewardPoints.at(blockHash, blockEra)\n      //console.log(`Era Points [${eraPoints}]`);\n      // const currPoints = 0;\n      eraPoints.individual.forEach((points,author) => {\n          //console.log(`Author Points [${author}]`);\n          //console.log(`Individual Points [${points}]`);\n          if(author.toString() === stash) {\n            // const pn = Number(points.toBigInt())\n            // const activeEra = {\n            //   era: blockEra,\n            //   block: blockHeight,\n            //   date: blockTimestamp,\n            //   points: pn\n            // }\n            const activeEra = blockEra\n            if (activeEras.indexOf(activeEra) < 0) {\n              activeEras.push(activeEra)\n              console.log(`Era [${blockEra}], Date [${blockTimestamp}]`); //, Points [${pn}]\n            }\n          }\n      });\n    }\n    return {\n      activeEras\n    }\n  }\n\n  async getActiveErasForBlock(address: string, blockStart: number) {\n    const stash = address || '5EhDdcWm4TdqKp1ew1PqtSpoAELmjbZZLm5E34aFoVYkXdRW';\n    const startHash = (await this.api.rpc.chain.getBlockHash(blockStart));\n    const startEra = (await this.api.query.staking.activeEra.at(startHash)).unwrap().index.toNumber();\n    const startTimestamp = new Date((await this.api.query.timestamp.now.at(startHash)).toNumber()).toISOString();\n    const eraPoints = await this.api.query.staking.erasRewardPoints.at(startHash, startEra)\n    let data = undefined\n    eraPoints.individual.forEach((points, author) => {\n      // console.log(`Author Points [${author}]`);\n      // console.log(`Individual Points [${points}]`);\n      if (author.toString() === stash) {\n        const pn = Number(points.toBigInt())\n        const activeEra: ActiveEra = {\n          id: blockStart,\n          era: startEra,\n          hash: startHash.toString(),\n          block: blockStart,\n          date: startTimestamp,\n          points: pn\n        }\n        //console.log(`Era [${activeEra.era}], Block [${activeEra.block}], Date [${activeEra.date}], Points [${activeEra.points}], Hash [${activeEra.hash}]`);\n        data = activeEra\n      }\n    });\n    return data\n  }\n  \n  async findActiveValidators(hash: Hash, searchPreviousBlocks: boolean): Promise<AccountId[]> {\n    const block = await this.api.rpc.chain.getBlock(hash);\n\n    let currentBlockNr = block.block.header.number.toNumber();\n    let activeValidators;\n    do {\n        let currentHash = (await this.api.rpc.chain.getBlockHash(currentBlockNr)) as Hash;\n        let allValidators = await this.api.query.staking.snapshotValidators.at(currentHash) as Option<Vec<AccountId>>;\n        if (!allValidators.isEmpty) {\n            let max = (await this.api.query.staking.validatorCount.at(currentHash)).toNumber();\n            activeValidators = Array.from(allValidators.unwrap()).slice(0, max);\n        }\n\n        if (searchPreviousBlocks) {\n            --currentBlockNr;\n        } else {\n            ++currentBlockNr;\n        }\n\n    } while (activeValidators === undefined);\n    return activeValidators;\n}\n\n  async validatorsData() {\n    const validators = await this.api.query.session.validators();\n    const era = await this.api.query.staking.currentEra();\n    const totalStake = era.isSome ?\n      await this.api.query.staking.erasTotalStake(era.unwrap())\n      : new BN(0);\n\n    return {\n      count: validators.length,\n      validators: validators.toJSON(),\n      total_stake: totalStake.toNumber(),\n    };\n  }\n}\n","const fromEntries = (xs: [string | number | symbol, any][]) =>\n  xs.reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n\nexport function PromiseAllObj(obj: {\n  [k: string]: any;\n}): Promise<{ [k: string]: any }> {\n  return Promise.all(\n    Object.entries(obj).map(([key, val]) =>\n      val instanceof Promise\n        ? val.then((res) => [key, res])\n        : new Promise((res) => res([key, val]))\n    )\n  ).then((res: any[]) => fromEntries(res));\n}\n","import { JoyApi } from \"./joyApi\";\nimport { PromiseAllObj } from \"./utils\";\n\nconst api = new JoyApi('wss://rome-rpc-endpoint.joystream.org:9944/');\n\nexport async function getChainStatus() {\n  await api.init;\n\n  const status = await PromiseAllObj({\n    totalIssuance: await api.totalIssuance(),\n    system: await api.systemData(),\n    finalizedBlockHeight: await api.finalizedBlockHeight(),\n    validators: await api.validatorsData()\n  });\n\n  return status;\n}\n\nexport async function getValidatorStatistics(address: string, blockStart: number) {\n  await api.init;\n  const status = await PromiseAllObj({\n    status: await api.getActiveErasForBlock(address, blockStart)\n  })\n  console.log(status);\n  return status\n}\n","import * as React from 'react';\nimport joystream from './joystream.svg';\nimport './App.css';\nimport { getValidatorStatistics } from './get-status';\nimport { Button, Container, Grid, TextField, withStyles } from '@material-ui/core';\nimport { DataGrid, ColDef } from '@material-ui/data-grid';\nimport { ActiveEra } from './joyApi';\n\ninterface IProps {\n}\n\ninterface IState {\n  shouldStop: boolean,\n  rows: ActiveEra[],\n  columns: ColDef[],\n  stash: string,\n  startBlock: number,\n  endBlock: number,\n  isLoading: boolean,\n}\n\nclass App extends React.Component<IProps, IState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      shouldStop: false,\n      rows: [],\n      columns: [\n        { field: 'era', headerName: 'Era', width: 100, sortable: true, headerAlign: 'center' },\n        { field: 'block', headerName: 'Block', width: 100, sortable: true, headerAlign: 'center' },\n        { field: 'date', headerName: 'Date', width: 200, sortable: true, headerAlign: 'center' },\n        { field: 'points', headerName: 'Points', width: 100, sortable: true, headerAlign: 'center' },\n        { field: 'hash', headerName: 'Block Hash', width: 500, sortable: false, headerAlign: 'center' },\n      ],\n      stash: '5EhDdcWm4TdqKp1ew1PqtSpoAELmjbZZLm5E34aFoVYkXdRW',\n      startBlock: 1069639,\n      endBlock: 1270177,\n      isLoading: false,\n    };\n    this.getStatus = this.getStatus.bind(this);\n    this.setStash = this.setStash.bind(this);\n    this.setBlockStart = this.setBlockStart.bind(this);\n    this.setBlockEnd = this.setBlockEnd.bind(this);\n  }\n\n  setStash(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState((prevState) => {\n      return { ...prevState, stash: event.target.value }\n    });\n  }\n\n  setBlockStart(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState((prevState) => {\n      return { ...prevState, startBlock: (event.target.value as unknown as number)}\n    });\n  }\n\n  setBlockEnd(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState((prevState) => {\n      return { ...prevState, endBlock: (event.target.value as unknown as number) }\n    });\n  }\n\n  async getStatus() {\n    const stash = this.state.stash;\n    const startBlock = this.state.startBlock;\n    const endBlock = this.state.endBlock;\n    const isLoading = this.state.isLoading\n    if (isLoading) {\n      this.setState((prevState) => {\n        return { ...prevState, shouldStop: true, isLoading: false }\n      });\n      return\n    }\n    this.setState((prevState) => {return { ...prevState, isLoading: true, rows: [] }});\n\n    if (startBlock < endBlock) {\n      for (let blockHeight = startBlock; blockHeight <= endBlock; blockHeight += 1) {\n        if (this.state.shouldStop) {\n          this.setState((prevState) => {\n            return { ...prevState, shouldStop: false }\n          });\n          break;\n        }\n        let result = await getValidatorStatistics(stash, blockHeight);\n        if (result && this.state.rows.indexOf(result.status) < 0) {\n          this.setState((prevState) => {\n            return { ...prevState, rows: [...this.state.rows, result.status] }\n          });\n        }\n      }\n    } else {\n      for (let blockHeight = startBlock; blockHeight >= endBlock; blockHeight -= 1) {\n        if (this.state.shouldStop) {\n          this.setState((prevState) => {\n            return { ...prevState, shouldStop: false }\n          });\n          break;\n        }\n        let result = await getValidatorStatistics(stash, blockHeight);\n        if (result && this.state.rows.indexOf(result.status) < 0) {\n          this.setState((prevState) => {\n            return { ...prevState, rows: [...this.state.rows, result.status] }\n          });\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <Container maxWidth=\"lg\">\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={3}\n          >\n            <Grid container item lg={12}></Grid>\n            <img src={joystream} className=\"App-logo\" alt=\"Joystream logo\" />\n            <Grid container item lg={12}>\n              <TextField onChange={this.setStash} fullWidth id=\"stash\" label=\"Stash\" value={this.state.stash} variant=\"filled\" />\n            </Grid>\n            <Grid container item lg={12}>\n              <TextField onChange={this.setBlockStart} fullWidth id=\"block-start\" label=\"Start Block\" value={this.state.startBlock} variant=\"filled\" />\n            </Grid>\n            <Grid container item lg={12}>\n              <TextField onChange={this.setBlockEnd} fullWidth id=\"block-end\" label=\"End Block\" value={this.state.endBlock} variant=\"filled\" />\n            </Grid>\n            <Grid container item lg={12}>\n              <BootstrapButton fullWidth onClick={this.getStatus} color=\"primary\">{this.state.isLoading ? 'Stop loading' : 'Load data'}</BootstrapButton>\n            </Grid>\n            <div style={{ height: 600, width: '98%' }}>\n              <DataGrid rows={this.state.rows} columns={this.state.columns} pageSize={50} />\n            </div>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nconst BootstrapButton = withStyles({\n  root: {\n    boxShadow: 'none',\n    textTransform: 'none',\n    fontSize: 16,\n    padding: '6px 12px',\n    border: '1px solid',\n    lineHeight: 1.5,\n    color: '#ffffff',\n    backgroundColor: '#0063cc',\n    borderColor: '#0063cc',\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:hover': {\n      backgroundColor: '#0069d9',\n      borderColor: '#0062cc',\n      boxShadow: 'none',\n    },\n    '&:active': {\n      boxShadow: 'none',\n      backgroundColor: '#0062cc',\n      borderColor: '#005cbf',\n    },\n    '&:focus': {\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n    },\n  },\n})(Button);","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}